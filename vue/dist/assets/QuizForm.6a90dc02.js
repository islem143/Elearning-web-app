import{u as b,r as p,i as k,m as w,c as x}from"./index.esm.19565990.js";import{_ as B,g as d,r as f,o as l,c as r,a as n,b as a,n as V,F as m,j as z,t as v,i as $,h as U}from"./index.ae1caef1.js";const D={name:"QuizForm",setup(){return{v$:b()}},data(){return{courseId:null,quizId:null,quiz:{title:"",description:"",duration:0},questions:[{text:"",choices:[],option:"",options:[]}]}},created(){let t=this.$route.params.courseId,e=this.$route.params.quizId;this.courseId=t,this.quizId=e,e&&(this.quizId=e,d.get("/api/course/"+t+"/quiz/"+e).then(i=>{this.quiz=i.data,i.data.questions.length!=0&&(this.questions=i.data.questions)}))},watch:{questions:{handler(t){for(let e=0;e<t.length;e++)if(t[e].choices.length!=0){this.addOptions(e,t[e].choices.length);for(let i=0;i<t[e].choices.length;i++)t[e].choices[i].is_correct&&(this.questions[e].option=this.questions[e].options[i])}}}},validations(){return{quiz:{title:{required:p},description:{required:p},duration:{required:p,integer:k,minValue:w(1)}},questions:{$each:x.forEach({title:{required:p},option:{required:p}})}}},methods:{addQuestions(){if(!this.quizId){this.$toast.add({severity:"warn",summary:"Please create the quiz first.",life:3e3});return}let t=100;this.questions.forEach(e=>{e.id?(e.choices.filter(i=>i.id),setTimeout(()=>{d.put("/api/quiz/"+this.quizId+"/question/"+e.id,{text:e.text}).then(i=>{d.put("/api/question/"+e.id+"/choice",{choices:e.choices}).then(o=>{this.$toast.add({severity:"success",summary:"Questions were updated.",life:3e3}).catch(u=>{this.$toast.add({severity:"danger",summary:"An Error occured.",life:3e3})})})})},t)):setTimeout(()=>{d.post("/api/quiz/"+this.quizId+"/question",{text:e.text}).then(i=>{let o=i.data.id;d.post("/api/question/"+o+"/choice",{choices:e.choices}).then(u=>{console.log(u.data),this.$toast.add({severity:"success",summary:"Questions were added.",life:3e3})})})},t),t+=100})},createQuiz(){d.post("/api/course/"+this.courseId+"/quiz",this.quiz).then(t=>{let e=t.data.id;this.quizId=e,this.$router.push({name:"quiz-edit",params:{courseId:this.courseId,quizId:e}}),this.$toast.add({severity:"success",summary:"Quiz was created.",life:3e3})})},addOptions(t,e){"options"in this.questions[t]||(this.questions[t].options=[]);for(let i=0;i<e;i++)this.questions[t].options.push({name:"option "+parseInt(i+1),code:parseInt(i+1)})},addOption(t){"options"in this.questions[t]||(this.questions[t].options=[]),this.questions[t].options.push({name:"option "+parseInt(this.questions[t].choices.length),code:this.questions[t].choices.length})},addChoice(t){let e=new Object({text:"",is_correct:!1});this.questions[t].choices.push(e),this.addOption(t)},deleteChoice(t){this.questions[t].choices.pop(),this.options.pop()},setCorrectAnswer(t){let e=this.questions[t].option.code-1;this.questions[t].choices=this.questions[t].choices.map(i=>({...i,is_correct:!1})),this.questions[t].choices[e].is_correct=!0,t==this.questions.length-1&&this.questions.push(new Object({title:"",choices:[],is_correct:"",option:"",options:[]}))}}},O={class:"card p-fluid"},j={class:"flex justify-content-center"},A={class:"w-6 mt-5"},T={class:"field"},N=n("label",null,"Quiz Title",-1),E={class:"p-error"},F={class:"field"},L=n("label",{for:"Description"},"Quiz Description",-1),S={class:"p-error"},M={class:"field"},P=n("label",{for:""},"Duration (In Minutes)",-1),G={class:"p-error"},H=n("h5",null,"Add Questions:",-1),J={class:"card p-fuild"},K={class:"field"},R={class:"text-lg"},W=n("label",{for:"Description",class:"mt-2"},"Question",-1),X=n("label",{for:"Description",class:"mt-2"},"Choices",-1),Y=["onClick"],Z=["onClick"],ee={class:"flex"};function te(t,e,i,o,u,h){const q=f("InputText"),C=f("InputNumber"),g=f("Button"),I=f("Dropdown");return l(),r("div",O,[n("div",j,[n("div",A,[n("div",T,[N,a(q,{modelValue:u.quiz.title,"onUpdate:modelValue":e[0]||(e[0]=s=>u.quiz.title=s),onInput:e[1]||(e[1]=s=>o.v$.quiz.title.$touch()),onBlur:e[2]||(e[2]=s=>o.v$.quiz.title.$touch()),class:V(o.v$.quiz.title.$errors.length!=0?"p-invalid":"")},null,8,["modelValue","class"]),(l(!0),r(m,null,z(o.v$.quiz.title.$errors,s=>(l(),r("p",E,v(s.$message),1))),256))]),n("div",F,[L,a(q,{modelValue:u.quiz.description,"onUpdate:modelValue":e[3]||(e[3]=s=>u.quiz.description=s),onInput:e[4]||(e[4]=s=>o.v$.quiz.description.$touch()),onBlur:e[5]||(e[5]=s=>o.v$.quiz.description.$touch()),class:V(o.v$.quiz.description.$errors.length!=0?"p-invalid":"")},null,8,["modelValue","class"]),(l(!0),r(m,null,z(o.v$.quiz.description.$errors,s=>(l(),r("p",S,v(s.$message),1))),256))]),n("div",M,[P,a(C,{modelValue:u.quiz.duration,"onUpdate:modelValue":e[6]||(e[6]=s=>u.quiz.duration=s),onInput:e[7]||(e[7]=s=>o.v$.quiz.duration.$touch()),onBlur:e[8]||(e[8]=s=>o.v$.quiz.duration.$touch()),class:V(o.v$.quiz.duration.$errors.length!=0?"p-invalid":"")},null,8,["modelValue","class"]),(l(!0),r(m,null,z(o.v$.quiz.duration.$errors,s=>(l(),r("p",G,v(s.$message),1))),256))]),a(g,{label:"Create The Quiz",onClick:h.createQuiz},null,8,["onClick"]),H,(l(!0),r(m,null,z(u.questions,(s,_)=>(l(),r("div",J,[n("div",K,[n("p",R,"Question "+v(_+1)+":",1),W,a(q,{modelValue:s.text,"onUpdate:modelValue":c=>s.text=c,placeholder:"Quesiton text"},null,8,["modelValue","onUpdate:modelValue"]),X,n("i",{class:"pi pi-plus cursor-pointer text-md m-2",onClick:c=>h.addChoice(_)},null,8,Y),s.choices.length!=0?(l(),r("i",{key:0,class:"pi pi-minus cursor-pointer text-md m-2",onClick:c=>h.deleteChoice(_)},null,8,Z)):$("",!0),(l(!0),r(m,null,z(s.choices,(c,Q)=>(l(),r("div",null,[n("div",ee,[a(q,{class:"mt-2",placeholder:"Option "+parseInt(Q+1),type:"text",modelValue:c.text,"onUpdate:modelValue":y=>c.text=y},null,8,["placeholder","modelValue","onUpdate:modelValue"])])]))),256)),s.choices.length!=0?(l(),U(I,{key:1,onChange:c=>h.setCorrectAnswer(_),modelValue:s.option,"onUpdate:modelValue":c=>s.option=c,options:s.options,class:"mt-2",optionLabel:"name",placeholder:"Select an Answer"},null,8,["onChange","modelValue","onUpdate:modelValue","options"])):$("",!0)])]))),256)),a(g,{class:"mt-5",onClick:h.addQuestions,label:"Add Questions"},null,8,["onClick"])])])])}const oe=B(D,[["render",te]]);export{oe as Q};
